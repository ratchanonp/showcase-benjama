/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as ProfileIndexImport } from './routes/profile/index'
import { Route as PortfolioIndexImport } from './routes/portfolio/index'
import { Route as PopularIndexImport } from './routes/popular/index'
import { Route as CategoryIndexImport } from './routes/category/index'
import { Route as AdminIndexImport } from './routes/admin/index'
import { Route as StoryStoryIdImport } from './routes/story/$storyId'
import { Route as ProfileEditImport } from './routes/profile/edit'
import { Route as ProfileAddPortfolioImport } from './routes/profile/add-portfolio'
import { Route as ProfileAddAwardImport } from './routes/profile/add-award'
import { Route as PortfolioPortfolioIdImport } from './routes/portfolio/$portfolioId'
import { Route as CategoryCategoryIdImport } from './routes/category/$categoryId'
import { Route as AuthSignUpImport } from './routes/auth/signUp'
import { Route as AuthSignInImport } from './routes/auth/signIn'
import { Route as AuthForgotPasswordImport } from './routes/auth/forgot-password'

// Create Virtual Routes

const AboutIndexLazyImport = createFileRoute('/about/')()

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AboutIndexLazyRoute = AboutIndexLazyImport.update({
  id: '/about/',
  path: '/about/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about/index.lazy').then((d) => d.Route))

const ProfileIndexRoute = ProfileIndexImport.update({
  id: '/profile/',
  path: '/profile/',
  getParentRoute: () => rootRoute,
} as any)

const PortfolioIndexRoute = PortfolioIndexImport.update({
  id: '/portfolio/',
  path: '/portfolio/',
  getParentRoute: () => rootRoute,
} as any)

const PopularIndexRoute = PopularIndexImport.update({
  id: '/popular/',
  path: '/popular/',
  getParentRoute: () => rootRoute,
} as any)

const CategoryIndexRoute = CategoryIndexImport.update({
  id: '/category/',
  path: '/category/',
  getParentRoute: () => rootRoute,
} as any)

const AdminIndexRoute = AdminIndexImport.update({
  id: '/admin/',
  path: '/admin/',
  getParentRoute: () => rootRoute,
} as any)

const StoryStoryIdRoute = StoryStoryIdImport.update({
  id: '/story/$storyId',
  path: '/story/$storyId',
  getParentRoute: () => rootRoute,
} as any)

const ProfileEditRoute = ProfileEditImport.update({
  id: '/profile/edit',
  path: '/profile/edit',
  getParentRoute: () => rootRoute,
} as any)

const ProfileAddPortfolioRoute = ProfileAddPortfolioImport.update({
  id: '/profile/add-portfolio',
  path: '/profile/add-portfolio',
  getParentRoute: () => rootRoute,
} as any)

const ProfileAddAwardRoute = ProfileAddAwardImport.update({
  id: '/profile/add-award',
  path: '/profile/add-award',
  getParentRoute: () => rootRoute,
} as any)

const PortfolioPortfolioIdRoute = PortfolioPortfolioIdImport.update({
  id: '/portfolio/$portfolioId',
  path: '/portfolio/$portfolioId',
  getParentRoute: () => rootRoute,
} as any)

const CategoryCategoryIdRoute = CategoryCategoryIdImport.update({
  id: '/category/$categoryId',
  path: '/category/$categoryId',
  getParentRoute: () => rootRoute,
} as any)

const AuthSignUpRoute = AuthSignUpImport.update({
  id: '/auth/signUp',
  path: '/auth/signUp',
  getParentRoute: () => rootRoute,
} as any)

const AuthSignInRoute = AuthSignInImport.update({
  id: '/auth/signIn',
  path: '/auth/signIn',
  getParentRoute: () => rootRoute,
} as any)

const AuthForgotPasswordRoute = AuthForgotPasswordImport.update({
  id: '/auth/forgot-password',
  path: '/auth/forgot-password',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/auth/forgot-password': {
      id: '/auth/forgot-password'
      path: '/auth/forgot-password'
      fullPath: '/auth/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordImport
      parentRoute: typeof rootRoute
    }
    '/auth/signIn': {
      id: '/auth/signIn'
      path: '/auth/signIn'
      fullPath: '/auth/signIn'
      preLoaderRoute: typeof AuthSignInImport
      parentRoute: typeof rootRoute
    }
    '/auth/signUp': {
      id: '/auth/signUp'
      path: '/auth/signUp'
      fullPath: '/auth/signUp'
      preLoaderRoute: typeof AuthSignUpImport
      parentRoute: typeof rootRoute
    }
    '/category/$categoryId': {
      id: '/category/$categoryId'
      path: '/category/$categoryId'
      fullPath: '/category/$categoryId'
      preLoaderRoute: typeof CategoryCategoryIdImport
      parentRoute: typeof rootRoute
    }
    '/portfolio/$portfolioId': {
      id: '/portfolio/$portfolioId'
      path: '/portfolio/$portfolioId'
      fullPath: '/portfolio/$portfolioId'
      preLoaderRoute: typeof PortfolioPortfolioIdImport
      parentRoute: typeof rootRoute
    }
    '/profile/add-award': {
      id: '/profile/add-award'
      path: '/profile/add-award'
      fullPath: '/profile/add-award'
      preLoaderRoute: typeof ProfileAddAwardImport
      parentRoute: typeof rootRoute
    }
    '/profile/add-portfolio': {
      id: '/profile/add-portfolio'
      path: '/profile/add-portfolio'
      fullPath: '/profile/add-portfolio'
      preLoaderRoute: typeof ProfileAddPortfolioImport
      parentRoute: typeof rootRoute
    }
    '/profile/edit': {
      id: '/profile/edit'
      path: '/profile/edit'
      fullPath: '/profile/edit'
      preLoaderRoute: typeof ProfileEditImport
      parentRoute: typeof rootRoute
    }
    '/story/$storyId': {
      id: '/story/$storyId'
      path: '/story/$storyId'
      fullPath: '/story/$storyId'
      preLoaderRoute: typeof StoryStoryIdImport
      parentRoute: typeof rootRoute
    }
    '/admin/': {
      id: '/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminIndexImport
      parentRoute: typeof rootRoute
    }
    '/category/': {
      id: '/category/'
      path: '/category'
      fullPath: '/category'
      preLoaderRoute: typeof CategoryIndexImport
      parentRoute: typeof rootRoute
    }
    '/popular/': {
      id: '/popular/'
      path: '/popular'
      fullPath: '/popular'
      preLoaderRoute: typeof PopularIndexImport
      parentRoute: typeof rootRoute
    }
    '/portfolio/': {
      id: '/portfolio/'
      path: '/portfolio'
      fullPath: '/portfolio'
      preLoaderRoute: typeof PortfolioIndexImport
      parentRoute: typeof rootRoute
    }
    '/profile/': {
      id: '/profile/'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileIndexImport
      parentRoute: typeof rootRoute
    }
    '/about/': {
      id: '/about/'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/signIn': typeof AuthSignInRoute
  '/auth/signUp': typeof AuthSignUpRoute
  '/category/$categoryId': typeof CategoryCategoryIdRoute
  '/portfolio/$portfolioId': typeof PortfolioPortfolioIdRoute
  '/profile/add-award': typeof ProfileAddAwardRoute
  '/profile/add-portfolio': typeof ProfileAddPortfolioRoute
  '/profile/edit': typeof ProfileEditRoute
  '/story/$storyId': typeof StoryStoryIdRoute
  '/admin': typeof AdminIndexRoute
  '/category': typeof CategoryIndexRoute
  '/popular': typeof PopularIndexRoute
  '/portfolio': typeof PortfolioIndexRoute
  '/profile': typeof ProfileIndexRoute
  '/about': typeof AboutIndexLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/signIn': typeof AuthSignInRoute
  '/auth/signUp': typeof AuthSignUpRoute
  '/category/$categoryId': typeof CategoryCategoryIdRoute
  '/portfolio/$portfolioId': typeof PortfolioPortfolioIdRoute
  '/profile/add-award': typeof ProfileAddAwardRoute
  '/profile/add-portfolio': typeof ProfileAddPortfolioRoute
  '/profile/edit': typeof ProfileEditRoute
  '/story/$storyId': typeof StoryStoryIdRoute
  '/admin': typeof AdminIndexRoute
  '/category': typeof CategoryIndexRoute
  '/popular': typeof PopularIndexRoute
  '/portfolio': typeof PortfolioIndexRoute
  '/profile': typeof ProfileIndexRoute
  '/about': typeof AboutIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/signIn': typeof AuthSignInRoute
  '/auth/signUp': typeof AuthSignUpRoute
  '/category/$categoryId': typeof CategoryCategoryIdRoute
  '/portfolio/$portfolioId': typeof PortfolioPortfolioIdRoute
  '/profile/add-award': typeof ProfileAddAwardRoute
  '/profile/add-portfolio': typeof ProfileAddPortfolioRoute
  '/profile/edit': typeof ProfileEditRoute
  '/story/$storyId': typeof StoryStoryIdRoute
  '/admin/': typeof AdminIndexRoute
  '/category/': typeof CategoryIndexRoute
  '/popular/': typeof PopularIndexRoute
  '/portfolio/': typeof PortfolioIndexRoute
  '/profile/': typeof ProfileIndexRoute
  '/about/': typeof AboutIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth/forgot-password'
    | '/auth/signIn'
    | '/auth/signUp'
    | '/category/$categoryId'
    | '/portfolio/$portfolioId'
    | '/profile/add-award'
    | '/profile/add-portfolio'
    | '/profile/edit'
    | '/story/$storyId'
    | '/admin'
    | '/category'
    | '/popular'
    | '/portfolio'
    | '/profile'
    | '/about'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth/forgot-password'
    | '/auth/signIn'
    | '/auth/signUp'
    | '/category/$categoryId'
    | '/portfolio/$portfolioId'
    | '/profile/add-award'
    | '/profile/add-portfolio'
    | '/profile/edit'
    | '/story/$storyId'
    | '/admin'
    | '/category'
    | '/popular'
    | '/portfolio'
    | '/profile'
    | '/about'
  id:
    | '__root__'
    | '/'
    | '/auth/forgot-password'
    | '/auth/signIn'
    | '/auth/signUp'
    | '/category/$categoryId'
    | '/portfolio/$portfolioId'
    | '/profile/add-award'
    | '/profile/add-portfolio'
    | '/profile/edit'
    | '/story/$storyId'
    | '/admin/'
    | '/category/'
    | '/popular/'
    | '/portfolio/'
    | '/profile/'
    | '/about/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthForgotPasswordRoute: typeof AuthForgotPasswordRoute
  AuthSignInRoute: typeof AuthSignInRoute
  AuthSignUpRoute: typeof AuthSignUpRoute
  CategoryCategoryIdRoute: typeof CategoryCategoryIdRoute
  PortfolioPortfolioIdRoute: typeof PortfolioPortfolioIdRoute
  ProfileAddAwardRoute: typeof ProfileAddAwardRoute
  ProfileAddPortfolioRoute: typeof ProfileAddPortfolioRoute
  ProfileEditRoute: typeof ProfileEditRoute
  StoryStoryIdRoute: typeof StoryStoryIdRoute
  AdminIndexRoute: typeof AdminIndexRoute
  CategoryIndexRoute: typeof CategoryIndexRoute
  PopularIndexRoute: typeof PopularIndexRoute
  PortfolioIndexRoute: typeof PortfolioIndexRoute
  ProfileIndexRoute: typeof ProfileIndexRoute
  AboutIndexLazyRoute: typeof AboutIndexLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthForgotPasswordRoute: AuthForgotPasswordRoute,
  AuthSignInRoute: AuthSignInRoute,
  AuthSignUpRoute: AuthSignUpRoute,
  CategoryCategoryIdRoute: CategoryCategoryIdRoute,
  PortfolioPortfolioIdRoute: PortfolioPortfolioIdRoute,
  ProfileAddAwardRoute: ProfileAddAwardRoute,
  ProfileAddPortfolioRoute: ProfileAddPortfolioRoute,
  ProfileEditRoute: ProfileEditRoute,
  StoryStoryIdRoute: StoryStoryIdRoute,
  AdminIndexRoute: AdminIndexRoute,
  CategoryIndexRoute: CategoryIndexRoute,
  PopularIndexRoute: PopularIndexRoute,
  PortfolioIndexRoute: PortfolioIndexRoute,
  ProfileIndexRoute: ProfileIndexRoute,
  AboutIndexLazyRoute: AboutIndexLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/auth/forgot-password",
        "/auth/signIn",
        "/auth/signUp",
        "/category/$categoryId",
        "/portfolio/$portfolioId",
        "/profile/add-award",
        "/profile/add-portfolio",
        "/profile/edit",
        "/story/$storyId",
        "/admin/",
        "/category/",
        "/popular/",
        "/portfolio/",
        "/profile/",
        "/about/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/auth/forgot-password": {
      "filePath": "auth/forgot-password.tsx"
    },
    "/auth/signIn": {
      "filePath": "auth/signIn.tsx"
    },
    "/auth/signUp": {
      "filePath": "auth/signUp.tsx"
    },
    "/category/$categoryId": {
      "filePath": "category/$categoryId.tsx"
    },
    "/portfolio/$portfolioId": {
      "filePath": "portfolio/$portfolioId.tsx"
    },
    "/profile/add-award": {
      "filePath": "profile/add-award.tsx"
    },
    "/profile/add-portfolio": {
      "filePath": "profile/add-portfolio.tsx"
    },
    "/profile/edit": {
      "filePath": "profile/edit.tsx"
    },
    "/story/$storyId": {
      "filePath": "story/$storyId.tsx"
    },
    "/admin/": {
      "filePath": "admin/index.tsx"
    },
    "/category/": {
      "filePath": "category/index.tsx"
    },
    "/popular/": {
      "filePath": "popular/index.tsx"
    },
    "/portfolio/": {
      "filePath": "portfolio/index.tsx"
    },
    "/profile/": {
      "filePath": "profile/index.tsx"
    },
    "/about/": {
      "filePath": "about/index.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
